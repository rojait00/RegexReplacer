@page "/editruleset"
@using RegexReplacer.Client.Helper
@using RegexReplacer.Client.ListViewItems
@using RegexReplacer.Shared
@using RadzenHelper.Views
@inject NotificationService notificationService
@inject IJSRuntime jsRuntime
@inject NavigationManager navigationManager

<PageTitle>Edit Rule Set</PageTitle>

<h1>Edit Rule Set</h1>

@if (!ruleSets.Any())
{
    <h4>No Rule Sets defined. Please go to "Manage Rule Sets" and add a new Rule Set.</h4>
    <RadzenButton Click=@(args => navigationManager.NavigateTo("/managerulesets")) Text="Add New" Icon="add_circle_outline" ButtonStyle="ButtonStyle.Primary" />
}
else
{
    <RadzenDropDown AllowClear="false" AllowFiltering="true" FilterCaseSensitivity="FilterCaseSensitivity.CaseInsensitive"
                Placeholder="Select Rule Set Name..." Multiple="false" Class="w-25"
                @bind-Value=@ruleSet Data=@ruleSets TextProperty="Name" />
    <br />
    <hr />
    <br />
    <EasyListView TItem="Rule" Items="items">
    </EasyListView>
}

@code {
    RuleSetHelper? ruleSetHelper = null;

    IEnumerable<RuleSet> ruleSets = Array.Empty<RuleSet>();
    RuleSet? ruleSet = null;

    RuleListViewItems items = new RuleListViewItems();

    List<RegexFunction> regexFunctions = EnumHelper.GetEnums<RegexFunction>();

    protected override async Task OnInitializedAsync()
    {
        await base.OnInitializedAsync();

        ruleSetHelper = await RuleSetHelper.GetRuleSetHelper(jsRuntime);
        ruleSets = ruleSetHelper.RuleSets;
        ruleSet = ruleSets.FirstOrDefault() ?? new();

        await items.Init(ruleSetHelper, notificationService);
    }

}