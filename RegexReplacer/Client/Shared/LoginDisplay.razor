@using Microsoft.AspNetCore.Components.Authorization
@using Microsoft.AspNetCore.Components.WebAssembly.Authentication

@inject NavigationManager Navigation
@inject SignOutSessionStateManager SignOutManager

<AuthorizeView>
    <Authorized>
        <RadzenButton Click=@(args => GoTo("authentication/profile")) Text="@($"Hello, {context.User.Identity?.Name}!")" Icon="account_circle" ButtonStyle="ButtonStyle.Primary" />
            &nbsp;&nbsp;&nbsp;
        <RadzenButton Click=@(args => BeginSignOut(args)) Text="Log out" Icon="logout" ButtonStyle="ButtonStyle.Primary" />
    </Authorized>
    <NotAuthorized>
        <RadzenButton Click=@(args => GoTo("authentication/register")) Text="Register" Icon="person_add" ButtonStyle="ButtonStyle.Primary" />
            &nbsp;&nbsp;&nbsp;
        <RadzenButton Click=@(args => GoTo("authentication/login")) Text="Log in" Icon="login" ButtonStyle="ButtonStyle.Primary" />
    </NotAuthorized>
</AuthorizeView>

@code {
    private async Task BeginSignOut(MouseEventArgs args)
    {
        await SignOutManager.SetSignOutState();
        Navigation.NavigateTo("authentication/logout");
    }

    private void GoTo(string link)
    {
        Navigation.NavigateTo(link);
    }
}
